1. 块：文件系统的最小寻址单元，
由于内核在处理块数据时需要一些控制信息，所以每个缓存区（内存中对应块的区）需要一个描述符，buffer_head称为缓存区头，当一个块被调入内存时，他主要存储在一个缓冲区中
一个缓存页是b_page,他可以存放一个或多个块，即b_data,一个b_data对应一个块。
块IO由bio表示
2. 
flashcache_map(struct dm_target_t *ti,struct bio *bio)
{
	struct cache_c *dmc = (struct cache_c *)ti->private;
	int sectors = to_sector(bio->bi_size);
	int queued;
	int uncacheable;
	unsigned long flags;
	if(sectors <= 32)
		size_hist[sectors]++;
	if(bio_barrier(bio))
		return -EOPNOTSUPP;
	flashcache_do_block_checks(dmc,bio);
	
	
}
===================================
工作队列：将do_WORK函数传给自己创建的kcached_wq队列
INIT_WORK(&_kcached_wq,do_work);
4个全局的job队列
执行动作：
do_work(struct work_struct *unuset)
{
	process_jobs(&_md_complete_jobs,flashcache_md_write_done);
	process_jobs(&_pending_jobs,flashcache_do_pending);
	process_jobs(&_md_io_jobs,flashcache_md_write_kickoff);
	process_jobs(&_io_jobs,flashcache_do_io);//循环吐出io_jobs中的job，传递给flashcache_do_io
	process_jobs(&_uncached_io_complete_jobs,flashcache_uncached_io_complete);
}